name: Pull & Save Docker Image Frome AliYun
on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'alpine:latest'  # 设置默认的 Docker 镜像列表

env:
  ALIYUN_REGISTRY: "${{ secrets.ALI_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALI_NAME }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALI_PASSWORD }}"

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -h .
        df -hl /var/lib/docker/
        echo "=============================================================================="
    
    - name: Clean /tmp directory
      run: |
        df -h /tmp
        
    # 增加可用磁盘空间
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:

        root-reserve-mb: 40960
        swap-size-mb: 128
        remove-dotnet: 'true'
        remove-haskell: 'true'
        # 如果空间还是不够用，可以把以下开启，清理出更多空间
        remove-android: 'true'
        remove-codeql: 'true'
        # build-mount-path: '/var/lib/docker/'

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -h .
        df -hl /var/lib/docker/
        echo "=============================================================================="
        
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clean up Docker to free space
      run: |
          docker system prune -a -f
          docker volume prune -f
          
    - name: Login Aliyun Registry
      run: |
          docker login -u ${ALIYUN_REGISTRY_USER} -p ${ALIYUN_REGISTRY_PASSWORD} ${ALIYUN_REGISTRY}
          
    - name: Pull Docker Images and Package
      run: |
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          docker pull "${image}"
          docker run -d -v ollama:/root/.ollama -p 11434:11434 --name $(basename "$image") ${image}
          # docker save "${image}" -o "$(basename "$image").tar"
        done
        
    - name: Copy Model
      run: |
        docker cp $(basename "$image"):/tmp/model ./
        
    - name: Compress the TAR files
      run: tar -czf model.tar.gz ./model

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: model-tar
        path: model.tar.gz
        retention-days: 1  # 将保留天数设置为 1 天 最多可设置90天

    - name: Clean up intermediate files
      run: |
        rm -R ./model
